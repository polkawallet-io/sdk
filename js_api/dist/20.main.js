"use strict";(self.webpackChunk_polkawallet_js_api=self.webpackChunk_polkawallet_js_api||[]).push([[20],{38020:(e,s,a)=>{a.r(s),a.d(s,{AddChainError:()=>t,AlreadyDestroyedError:()=>o,CrashError:()=>n,JsonRpcDisabledError:()=>r,start:()=>i});class t extends Error{constructor(e){super(e),this.name="AddChainError"}}class o extends Error{constructor(){super(),this.name="AlreadyDestroyedError"}}class r extends Error{constructor(){super(),this.name="JsonRpcDisabledError"}}class n extends Error{constructor(e){super(e)}}function i(e){const s=(e=e||{}).logCallback||((e,s,a)=>{e<=1?console.error("[%s] %s",s,a):2==e?console.warn("[%s] %s",s,a):3==e?console.info("[%s] %s",s,a):4==e?console.debug("[%s] %s",s,a):console.trace("[%s] %s",s,a)}),i=function(){if(!window.Worker)throw new Error("Workers not available");return new Worker(new URL(a.p+a.u(726),a.b),{name:"smoldot"})}();let l=null,d=[],h=new Map,u=new WeakMap;const p={name:null};let b=null;const f=()=>{null!==b&&globalThis.clearTimeout(b),b=globalThis.setTimeout((()=>{b=null,l||console.warn("Smoldot appears unresponsive"+(p.name?" while executing task `"+p.name+"`":"")+". Please open an issue at https://github.com/paritytech/smoldot/issues. If you have a debugger available, please pause execution, generate a stack trace of the thread that isn't the main execution thread, and paste it in the issue. Please also include any other log found in the console or elsewhere.")}),1e4)};return globalThis.setTimeout((()=>f()),15e3),function(e,s){e.onmessage=e=>s(e.data)}(i,(e=>{switch(e.kind){case"jsonrpc":{const s=h.get(e.chainId)?.jsonRpcCallback;s&&s(e.data);break}case"chainAddedOk":{const s=d.shift(),a=e.chainId;if(h.has(a))throw"Unexpected reuse of a chain ID";h.set(a,{jsonRpcCallback:s.jsonRpcCallback,databasePromises:new Array});const t={sendJsonRpc:e=>{if(l)throw l;if(!h.has(a))throw new o;if(!h.get(a)?.jsonRpcCallback)throw new r;e.length>=8388608||c(i,{ty:"request",request:e,chainId:a})},databaseContent:e=>{if(l)return Promise.reject(l);const s=h.get(a)?.databasePromises;if(!s)return Promise.reject(new o);const t=new Promise(((e,a)=>{s.push({resolve:e,reject:a})})),r=e||4294967295;return c(i,{ty:"databaseContent",chainId:a,maxUtf8BytesSize:r>=4*(1<<30)?4294967295:r}),t},remove:()=>{if(l)throw l;if(!h.delete(a))throw new o;console.assert(u.has(t)),u.delete(t),c(i,{ty:"removeChain",chainId:a})}};u.set(t,a),s.resolve(t);break}case"chainAddedErr":d.shift().reject(new t(e.error));break;case"databaseContent":{const s=h.get(e.chainId)?.databasePromises;s&&s.shift().resolve(e.data);break}case"log":s(e.level,e.target,e.message);break;case"livenessPing":f();break;case"currentTask":p.name=e.taskName;break;default:return e}})),function(e,s){e.onerror=e=>{e.error instanceof Error?s(e.error):s(new Error(e.message||e))}}(i,(e=>{const s=e.toString();for(var a of(console.error("Smoldot has panicked"+(p.name?" while executing task `"+p.name+"`":"")+". This is a bug in smoldot. Please open an issue at https://github.com/paritytech/smoldot/issues with the following message:\n"+s),l=new n(s),d))"chainAdded"==a.ty&&a.reject(l);d=[];for(const e of h)for(const s of e[1].databasePromises)s.reject(l);h.clear()})),c(i,{maxLogLevel:e.maxLogLevel||3,enableCurrentTask:!0,cpuRateLimit:e.cpuRateLimit||1,forbidTcp:e.forbidTcp||!1,forbidWs:e.forbidWs||!1,forbidNonLocalWs:e.forbidNonLocalWs||!1,forbidWss:e.forbidWss||!1}),{addChain:e=>{if(l)throw l;let s,a,t=[];if(e.potentialRelayChains)for(const s of e.potentialRelayChains){const e=u.get(s);void 0!==e&&t.push(e)}const o=new Promise(((e,t)=>{s=e,a=t}));return d.push({ty:"chainAdded",reject:a,resolve:s,jsonRpcCallback:e.jsonRpcCallback}),c(i,{ty:"addChain",chainSpec:e.chainSpec,databaseContent:"string"==typeof e.databaseContent?e.databaseContent:"",potentialRelayChains:t,jsonRpcRunning:!!e.jsonRpcCallback}),o},terminate:()=>l?Promise.reject(l):(l=new o,null!==b&&globalThis.clearTimeout(b),function(e){return e.terminate(),Promise.resolve()}(i))}}function c(e,s){e.postMessage(s)}}}]);